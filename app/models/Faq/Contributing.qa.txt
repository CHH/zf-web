Q: Who can become a contributor to Zend Framework?
A: Any PHP developer may contribute code to Zend Framework
   project using the <a
href="http://framework.zend.com/wiki/display/ZFPROP/Home">ZF contribution and proposal process</a>.


Q: Are there any prerequisites to becoming a contributor?
A: See <a
href="http://framework.zend.com/wiki/display/ZFPROP/Contributor+License+Agreement">the instructions for submitting a Zend Framework Contributor License Agreement</a>.

Q: What contributions are needed?
A: Please see the <a href="/roadmap/">Roadmap</a> for areas where
   contributions are being solicited.  Also, Zend Framework
   is always looking for bright ideas.  Please feel free to suggest
   ideas for new additions.


Q: What about existing code?  Can it be included?
   Yes.  Existing code may be considered for inclusion in the Zend
   Framework.  This is highly encouraged for mature components.
   However, all components must comply with the terms of the license
   and contributors need to be the rightful owners of the code to
   satisfy the terms of the Contributor License Agreement (CLA).  Also, components are subject to refactoring
   so that they meet the <a href="http://framework.zend.com/wiki/display/ZFDEV/Zend+Framework+PHP+Coding+Standard">coding standards</a> and spirit of Zend Framework.


Q: What is the contribution process?
A: See the <a href="http://framework.zend.com/wiki/x/Rh8">Zend Framework Contribution Process</a>

Q: How do I write a proposal?  Is there a form?
A: See the <a href="http://framework.zend.com/wiki/display/ZFPROP/Home">Zend
Framework Proposal Process</a>.


Q: What is the proper forum for discussing contributions?
A: As this is a community process, all public discussions should
   occur on the fw-general mailing list.  Zend will also discuss
   some issues internally or with individual contributors, especially when
   there is a conflict on the list.  We will then bring the results
   of these discussions back to the fw-general mailing list.


Q: Why should Zend have the final decisions on all code?
A: The <a href="/roadmap/goals/">goal</a> of the project is to provide
   a high-quality, easy to use, and unified framework of components.
   With so many different contributors from different companies and
   backgrounds, Zend assumes the responsibility to assure quality
   and cohension throughout Zend Framework.


Q: Are there standards for writing code to be submitted?
A: Yes.  All code submitted to Zend Framework project must strictly
   adhere our published <a
href="/manual/en/coding-standard.html">Coding Standards</a>.


Q: I don't like an existing component.  Can I submit a better one?
A: Improvements to existing components, or replacements, may be proposed
   and submitted just like any other component.  Please check the mailing
   list archives before suggesting changes to components, just in case
   it has already been decided.  <br/><br/>

   Also, please remember that we are trying to keep components as
   simple as possible, so not all features will be added.  Users are
   encouraged to subclass Zend Framework components for their own projects.


Q: Are there other ways to contribute to Zend Framework?
A: Absolutely.  Additions, examples, and improvements to the English
   documentation are vitally important to make Zend Framework easy to use.
   Unit tests and documentation are vital to the project.  These
   can always be improved and we are very actively seeking contributions in
   these areas.  For unit tests, you can improve test coverage by writing
   new tests or improving existing ones.  For documentation, localization
   to languages other than English is also very important and you may
   wish to become a translator on the documentation team.


Q: I want to write code for Zend Framework.  What new components are needed?
A: Recent discussions on the mailing list highlight areas that need work.
   Please see <a href="/roadmap/components">Roadmap: Components</a> for areas
   where you can volunteer.

Q: Is phpDocumentor-style API documentation available for Zend Framework?
A: Though people are free to run phpDocumentor on Zend Framework however
   they so choose, we also make the API documentation available online. See
   the <a href="/manual">Zend Framework Manual</a>, and look for the API
   documentation links in the sidebar on the right side of the page.
